{
    "name": "vscode-modal-keys",
    "displayName": "ModalKeys",
    "description": "Customizable modal editing (ala vim and kakoune)",
    "publisher": "haberdashpi",
    "repository": {
        "url": "https://github.com/haberdashPI/vscode-modal-keys"
    },
    "icon": "logo.png",
    "version": "0.11.0",
    "engines": {
        "vscode": "^1.64.0"
    },
    "license": "MIT",
    "categories": [
        "Keymaps",
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "browser": "./dist/main.js",
    "docs": "./doc_dist/README.html",
    "targets": {
        "main": {
            "includeNodeModules": {
                "vscode": false
            },
            "engines": {
                "node": ">= 12"
            },
            "outputFormat": "commonjs",
            "isLibrary": true,
            "distDir": "dist"
        },
        "docs": {
            "engines": {
                "browsers": "> 90%"
            },
            "context": "browser",
            "distDir": "doc_dist"
        }
    },
    "contributes": {
        "views": {
            "modalKeyBindingView": [
                {
                    "type": "webview",
                    "id": "modalkeys.bindingView",
                    "name": "Modal Key Bindings",
                    "contextualTitle": "Modal Keys",
                    "icon": "icon.svg",
                    "visibility": "visible"
                }
            ],
            "modalKeyTips": [
                {
                    "type": "tree",
                    "id": "modalkeys.tipView",
                    "name": "Tips",
                    "visibility": "visible"
                }
            ]
        },
        "viewsContainers": {
            "panel": [
                {
                    "id": "modalKeyBindingView",
                    "title": "Modal Key Bindings",
                    "icon": "icon.svg"
                }
            ],
            "activitybar": [
                {
                    "id": "modalKeyTips",
                    "title": "Modal Key",
                    "icon": "icon.svg"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Modal Keys",
            "properties": {
                "modalkeys.docKinds": {
                    "type": "object",
                    "description": "A description of each kind of keybinding; determines keybinding color codes (order matters).",
                    "default": {}
                },
                "modalkeys.docTips": {
                    "type": "array",
                    "description": "A list of quick tips for selected keybindings",
                    "default": []
                },
                "modalkeys.keybindings": {
                    "type": "object",
                    "description": "Keybindings map key â†’ VS Code commands",
                    "default": {},
                    "patternProperties": {
                        "^(([a-z|]{2,}):)?([^:]*)$": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "description": "VS Code command"
                                },
                                {
                                    "type": "array",
                                    "description": "Sequence of commands",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "description": "Action"
                                            },
                                            {
                                                "type": "string",
                                                "description": "VS Code command"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "description": "VS Code command with arguments",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "VS Code command"
                                        },
                                        "args": {
                                            "description": "Command arguments",
                                            "anyOf": [
                                                {
                                                    "type": "object"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "description": "Conditional command",
                                    "properties": {
                                        "condition": {
                                            "type": "string",
                                            "description": "JavaScript expression that is evaluated"
                                        }
                                    }
                                },
                                {
                                    "type": "number",
                                    "description": "Keymap id"
                                }
                            ]
                        }
                    }
                },
                "modalkeys.colorBlindDocs": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Use shades that vary in luminance as well as color to make visual documentation of keybindings accessible to those with limited color vision. This reduces the number of disintct colors that are used."
                },
                "modalkeys.userPresetsFolder": {
                    "type": "string",
                    "description": "A folder where modal-key presets can be found.",
                    "scope": "machine"
                },
                "modalkeys.insertCursorStyle": {
                    "type": "string",
                    "enum": [
                        "block",
                        "block-outline",
                        "line",
                        "line-thin",
                        "underline",
                        "underline-thin"
                    ],
                    "default": "line",
                    "description": "Shape of the cursor when in insert mode."
                },
                "modalkeys.normalCursorStyle": {
                    "type": "string",
                    "enum": [
                        "block",
                        "block-outline",
                        "line",
                        "line-thin",
                        "underline",
                        "underline-thin"
                    ],
                    "default": "block",
                    "description": "Shape of the cursor when in normal mode."
                },
                "modalkeys.searchCursorStyle": {
                    "type": "string",
                    "enum": [
                        "block",
                        "block-outline",
                        "line",
                        "line-thin",
                        "underline",
                        "underline-thin"
                    ],
                    "default": "underline",
                    "description": "Shape of the cursor when incremental search is active."
                },
                "modalkeys.selectCursorStyle": {
                    "type": "string",
                    "enum": [
                        "block",
                        "block-outline",
                        "line",
                        "line-thin",
                        "underline",
                        "underline-thin"
                    ],
                    "default": "line-thin",
                    "description": "Shape of the cursor when selection is active in normal mode."
                },
                "modalkeys.insertStatusText": {
                    "type": "string",
                    "default": "-- $(edit) INSERT --",
                    "description": "Mode text (and icons) shown in status bar in insert mode."
                },
                "modalkeys.insertStatusColor": {
                    "type": "string",
                    "description": "Color of the status bar mode text in insert mode (in HTML format)."
                },
                "modalkeys.normalStatusText": {
                    "type": "string",
                    "default": "-- $(move) __MODENAME__ --",
                    "description": "Mode text (and icons) shown in status bar in both normal and custom modes."
                },
                "modalkeys.normalStatusColor": {
                    "type": "string",
                    "description": "Color of the status bar mode text in normal mode (in HTML format)."
                },
                "modalkeys.searchStatusText": {
                    "type": "string",
                    "default": "$(search) SEARCH",
                    "description": "Mode text (and icons) shown in status bar in search mode."
                },
                "modalkeys.searchStatusColor": {
                    "type": "string",
                    "description": "Color of the status bar mode text when in search mode (in HTML format)."
                },
                "modalkeys.selectStatusText": {
                    "type": "string",
                    "default": "-- $(paintcan) VISUAL --",
                    "description": "Mode text (and icons) shown in status bar selection is active in normal mode."
                },
                "modalkeys.selectStatusColor": {
                    "type": "string",
                    "description": "Color of the status bar mode text when selection is active in normal mode (in HTML format)."
                },
                "modalkeys.startMode": {
                    "type": "string",
                    "default": "normal",
                    "description": "The initial mode for the editor"
                },
                "modalkeys.searchMatchBackground": {
                    "type": "string",
                    "description": "A html format color styling to highlight the current search match(if left blank defaults to built-in search style)."
                },
                "modalkeys.searchMatchBorder": {
                    "type": "string",
                    "description": "A html format color styling for the border of the current search match (if left blank defaults to built-in search style)."
                },
                "modalkeys.searchOtherMatchesBackground": {
                    "type": "string",
                    "description": "A html format color styling to highlight other search matches (if left blank defaults to built-in search style)."
                },
                "modalkeys.searchOtherMatchesBorder": {
                    "type": "string",
                    "description": "A html format color styling for the border of other search matches (if left blank defaults to built-in search style)."
                }
            }
        },
        "commands": [
            {
                "command": "modalkeys.toggleKeymap",
                "title": "ModalKeys: Toggle keymap documentation"
            },
            {
                "command": "modalkeys.showKeymap",
                "title": "ModalKeys: Show keymap documentation"
            },
            {
                "command": "type",
                "title": "Type keys"
            },
            {
                "command": "modalkeys.toggle",
                "title": "ModalKeys: Toggle normal / insert mode"
            },
            {
                "command": "modalkeys.enterNormal",
                "title": "ModalKeys: Normal mode"
            },
            {
                "command": "modalkeys.enterMode",
                "title": "ModalKeys: the specified mode."
            },
            {
                "command": "modalkeys.enterInsert",
                "title": "ModalKeys: Insert mode"
            },
            {
                "command": "modalkeys.cancelSearch",
                "title": "ModalKeys: Cancel search mode"
            },
            {
                "command": "modalkeys.deleteCharFromSearch",
                "title": "ModalKeys: Delete the last search character"
            },
            {
                "command": "modalkeys.importPresets",
                "title": "ModalKeys: Import preset keybindings"
            },
            {
                "command": "modalkeys.exportPreset",
                "title": "ModalKeys: Export a preset for keybindings"
            },
            {
                "command": "modalkeys.toggleSelection",
                "title": "ModalKeys: Toggle selection mode"
            },
            {
                "command": "modalkeys.enableSelection",
                "title": "ModalKeys: Enable selection mode"
            },
            {
                "command": "modalkeys.cancelMultipleSelections",
                "title": "ModalKeys: Clear all selections, leaving multiple cursors intact"
            },
            {
                "command": "modalkeys.nextMatch",
                "title": "ModalKeys: Go to the next search match"
            },
            {
                "command": "modalkeys.previousMatch",
                "title": "ModalKeys: Go to the previous search match"
            },
            {
                "command": "modalkeys.repeatLastChange",
                "title": "ModalKeys: Repeat the last command that changed text"
            },
            {
                "command": "modalkeys.repeatLastUsedSelection",
                "title": "ModalKeys: Repeat the last selection used to change text"
            },
            {
                "command": "modalkeys.touchDocument",
                "title": "ModalKeys: Register a change to the text."
            },
            {
                "command": "modalkeys.untouchDocument",
                "title": "ModalKeys: Treat the text as unchanged."
            },
            {
                "command": "modalkeys.toggleRecordingMacro",
                "title": "ModalKeys: Toggle recording macro"
            },
            {
                "command": "modalkeys.cancelRecordingMacro",
                "title": "ModalKeys: Cancel macro recording"
            },
            {
                "command": "modalkeys.replayMacro",
                "title": "ModalKeys: Replay macro"
            },
            {
                "command": "modalkeys.nextKeytip",
                "title": "ModalKeys: Next Keytip"
            },
            {
                "command": "modalkeys.previousKeytip",
                "title": "ModalKeys: Previous Keytip"
            }
        ],
        "keybindings": [
            {
                "key": "ctrl+shift+/",
                "mac": "ctrl+cmd+/",
                "command": "modalkeys.toggleKeymap"
            },
            {
                "key": "alt+;",
                "command": "modalkeys.nextKeytip"
            },
            {
                "key": "shift+alt+;",
                "command": "modalkeys.previousKeytip"
            },
            {
                "key": "Escape",
                "command": "modalkeys.enterNormal",
                "when": "editorTextFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
            },
            {
                "key": "Escape",
                "command": "modalkeys.cancelSearch",
                "when": "editorTextFocus && modalkeys.mode == search"
            },
            {
                "key": "Backspace",
                "command": "modalkeys.deleteCharFromSearch",
                "when": "editorTextFocus && modalkeys.mode == search"
            }
        ]
    },
    "watch": {
        "build-html-docs": {
            "patterns": [
                "docs",
                "src",
                "presets",
                "README.md"
            ],
            "extensions": "js,ts,md,css",
            "ignore": "docs/build",
            "delay": 1000
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "package": "npx webpack --mode production --devtool hidden-source-map",
        "compile": "npx webpack --mode development",
        "watch": "npx webpack --watch --mode development",
        "build-html-docs": "node docs/build.js",
        "watch-html-docs": "npx npm-watch build-html-docs",
        "parcel-docs": "npx parcel docs/build/README.html --target docs",
        "parcel-build-docs": "npx parcel build docs/build/README.html --dist-dir doc_dist --public-url https://haberdashpi.github.io/vscode-modal-keys/stable/ --target docs",
        "parcel-build-dev-docs": "npx parcel build docs/build/README.html --dist-dir doc_dist --public-url https://haberdashpi.github.io/vscode-modal-keys/dev/ --target docs",
        "keep-watching-docs": "npm-run-all --parallel parcel-docs watch-html-docs",
        "watch-docs": "npm-run-all --serial build-html-docs keep-watching-docs",
        "build-docs": "npm-run-all --serial build-html-docs parcel-build-docs",
        "build-dev-docs": "npm-run-all --serial build-html-docs parcel-build-dev-docs",
        "predebug": "rm -rf dist",
        "debug": "npx webpack --mode development",
        "prepackage": "rm -rf dist",
        "lint": "eslint src --ext ts"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/lodash": "^4.14.168",
        "@types/mocha": "^8.0.4",
        "@types/node": "^12.11.7",
        "@types/text-encoding": "^0.0.36",
        "@types/vscode": "^1.64.0",
        "@typescript-eslint/eslint-plugin": "^4.14.1",
        "@typescript-eslint/parser": "^4.14.1",
        "cpx": "^1.5.0",
        "eslint": "^7.19.0",
        "glob": "^7.1.6",
        "highlight.js": "^11.0.1",
        "http-server": "^14.1.0",
        "jdi": "^1.1.3",
        "lodash": "^4.17.21",
        "mkdirp": "^0.5.5",
        "mocha": "^9.2.0",
        "npm-run-all": "^4.1.5",
        "npm-watch": "^0.10.0",
        "parcel": "*",
        "remarkable": "^2.0.1",
        "remarkable-header-ids": "^0.2.0",
        "tailwindcss": "^2.2.4",
        "text-encoding": "^0.7.0",
        "ts-loader": "^8.0.14",
        "typescript": "^4.1.3",
        "vscode-test": "^1.5.0"
    },
    "dependencies": {
        "vscode-uri": "^3.0.3",
        "webpack": "^5.73.0",
        "webpack-cli": "^4.9.2"
    }
}
